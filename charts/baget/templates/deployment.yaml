apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bytesafe.fullname" . }}
  labels:
    {{- include "bytesafe.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "bytesafe.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "bytesafe.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bytesafe.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: ApiKey
              valueFrom:
                secretKeyRef:
                  name: {{ template "bytesafe.fullname" . }}-apikey-secret
                  key: apiKey
            {{- if .Values.pathBase }}
            - name: PathBase
              value: {{ .Values.pathBase | quote }}
            {{- end }}
            - name: ASPNETCORE_URLS
              value: "http://+:{{ .Values.service.port }}"
            - name: PackageDeletionBehavior
              value: {{ .Values.packageDeletionBehavior | quote }}
            - name: AllowPackageOverrides
              value: {{ .Values.allowPackageOverrides | quote }}
            - name: Database__Type
              value: {{ .Values.database.type | quote }}
            {{- if .Values.database.secretName }}
            - name: Database__ConnectionString
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName }}
                  key: connection_string
            {{- end }}
            {{- if eq .Values.database.type "Sqlite" .}}
            - name: Database__ConnectionString
              value: "Data Source=bytesafe.db"
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: {{ template "bytesafe.fullname" . }}-data
              mountPath: /app/packages
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: {{ template "bytesafe.fullname" . }}-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (printf "%s-%s" (include "bytesafe.fullname" .) "data") }}
          {{- else }}
          emptyDir: {}
          {{- end }}